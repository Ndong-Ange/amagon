# Generated by Django 5.0.1 on 2025-07-08 21:13

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('seller_app', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='seller',
            name='salt',
            field=models.CharField(blank=True, max_length=16),
        ),
        migrations.CreateModel(
            name='SellerNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('new_order', 'New Order'), ('order_cancelled', 'Order Cancelled'), ('product_review', 'Product Review'), ('stock_alert', 'Stock Alert'), ('payment_received', 'Payment Received')], max_length=50)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('related_object_id', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='seller_app.seller')),
            ],
            options={
                'db_table': 'seller_notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SellerToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=64, unique=True)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auth_tokens', to='seller_app.seller')),
            ],
            options={
                'db_table': 'seller_tokens',
            },
        ),
    ]
